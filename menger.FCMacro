import FreeCAD, FreeCADGui
import Part

from PyQt4 import QtCore, QtGui

def errorDialog(msg):
    # Create a simple dialog QMessageBox
    # The first argument indicates the icon used: one of QtGui.QMessageBox.{NoIcon, Information, Warning, Critical, Question} 
    diag = QtGui.QMessageBox(QtGui.QMessageBox.Warning, 'Error in macro MessageBox', msg)
    diag.setWindowModality(QtCore.Qt.ApplicationModal)
    diag.exec_()

msg = 'Example of warning message'
#errorDialog(msg)
#raise(Exception(msg))

print "This is a macro."

def menger(size = 100, iterations = 3, base = None):
    base = base or Part.makeBox(size,size,size)
    sumshape = None
    for x in range(3):
        for y in (0,2,1):
            for z in range(3):
                if not (x,y,z) in [
                    (1,1,1), 
                    (1,1,0), (1,1,2),
                    (1,0,1), (1,2,1), 
                    (2,1,1), (0,1,1)]:
                    newshape = base.copy()
                    #newobj = FreeCAD.ActiveDocument.addObject(
                    #    'Part::Feature', 
                    #    "menger-%d-%d.%d.%d" % (iterations, x, y, z))
                    newshape.translate(FreeCAD.Base.Vector (size*x, size*y, size*z))
                    #newobj.Shape = newshape 
                    print dir(newshape)
                    if sumshape is None:
                        sumshape = newshape
                    else:
                        sumshape = sumshape.fuse(newshape)
    txmat = FreeCAD.Base.Matrix()
    txmat.scale(1.0/3, 1.0/3, 1.0/3)
    sumshape.transformShape(txmat)
    if iterations > 1:
        return menger(size, iterations - 1, sumshape.removeSplitter())
    else:
        return sumshape.removeSplitter() 
                        

    
msh = menger(iterations = 2)
newobj = FreeCAD.ActiveDocument.addObject(
   'Part::Feature', 
   "menger")
newobj.Shape=msh
             
                        
						
					
